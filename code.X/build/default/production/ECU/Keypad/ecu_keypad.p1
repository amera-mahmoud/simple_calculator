Version 4.0 HI-TECH Software Intermediate Code
"50 ECU/Keypad/../../MCAL_Layer/GPIO/gpio_hal.h
[; ;ECU/Keypad/../../MCAL_Layer/GPIO/gpio_hal.h: 50: {
[s S102 :3 `uc 1 :3 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S102 . port pin direction logic ]
"21 ECU/Keypad/ecu_keypad.h
[; ;ECU/Keypad/ecu_keypad.h: 21: {
[s S103 `S102 -> 4 `i `S102 -> 4 `i ]
[n S103 . keypad_row_pins keypad_column_pins ]
"78 ECU/Keypad/../../MCAL_Layer/GPIO/gpio_hal.h
[; ;ECU/Keypad/../../MCAL_Layer/GPIO/gpio_hal.h: 78: std_ReturnType gpio_pin_initialize(const pin_config_t* pin_config);
[v _gpio_pin_initialize `(uc ~T0 @X0 0 ef1`*CS102 ]
"73
[; ;ECU/Keypad/../../MCAL_Layer/GPIO/gpio_hal.h: 73: std_ReturnType gpio_pin_initialize_direction(const pin_config_t* pin_config);
[v _gpio_pin_initialize_direction `(uc ~T0 @X0 0 ef1`*CS102 ]
"37 ECU/Keypad/ecu_keypad.c
[; ;ECU/Keypad/ecu_keypad.c: 37:     logic_t col_logic;
[c E1501 0 1 .. ]
[n E1501 . GPIO_LOW GPIO_HIGH  ]
"75 ECU/Keypad/../../MCAL_Layer/GPIO/gpio_hal.h
[; ;ECU/Keypad/../../MCAL_Layer/GPIO/gpio_hal.h: 75: std_ReturnType gpio_pin_write_logic(const pin_config_t* pin_config, logic_t logic);
[v _gpio_pin_write_logic `(uc ~T0 @X0 0 ef2`*CS102`E1501 ]
"76
[; ;ECU/Keypad/../../MCAL_Layer/GPIO/gpio_hal.h: 76: std_ReturnType gpio_pin_read_logic(const pin_config_t* pin_config, logic_t* logic);
[v _gpio_pin_read_logic `(uc ~T0 @X0 0 ef2`*CS102`*E1501 ]
"54 C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h
[; <" INDF equ 00h ;# ">
"61
[; <" TMR0 equ 01h ;# ">
"68
[; <" PCL equ 02h ;# ">
"75
[; <" STATUS equ 03h ;# ">
"161
[; <" FSR equ 04h ;# ">
"168
[; <" PORTA equ 05h ;# ">
"218
[; <" PORTB equ 06h ;# ">
"280
[; <" PORTC equ 07h ;# ">
"342
[; <" PORTD equ 08h ;# ">
"404
[; <" PORTE equ 09h ;# ">
"436
[; <" PCLATH equ 0Ah ;# ">
"456
[; <" INTCON equ 0Bh ;# ">
"534
[; <" PIR1 equ 0Ch ;# ">
"596
[; <" PIR2 equ 0Dh ;# ">
"636
[; <" TMR1 equ 0Eh ;# ">
"643
[; <" TMR1L equ 0Eh ;# ">
"650
[; <" TMR1H equ 0Fh ;# ">
"657
[; <" T1CON equ 010h ;# ">
"732
[; <" TMR2 equ 011h ;# ">
"739
[; <" T2CON equ 012h ;# ">
"810
[; <" SSPBUF equ 013h ;# ">
"817
[; <" SSPCON equ 014h ;# ">
"887
[; <" CCPR1 equ 015h ;# ">
"894
[; <" CCPR1L equ 015h ;# ">
"901
[; <" CCPR1H equ 016h ;# ">
"908
[; <" CCP1CON equ 017h ;# ">
"966
[; <" RCSTA equ 018h ;# ">
"1061
[; <" TXREG equ 019h ;# ">
"1068
[; <" RCREG equ 01Ah ;# ">
"1075
[; <" CCPR2 equ 01Bh ;# ">
"1082
[; <" CCPR2L equ 01Bh ;# ">
"1089
[; <" CCPR2H equ 01Ch ;# ">
"1096
[; <" CCP2CON equ 01Dh ;# ">
"1154
[; <" ADRESH equ 01Eh ;# ">
"1161
[; <" ADCON0 equ 01Fh ;# ">
"1257
[; <" OPTION_REG equ 081h ;# ">
"1327
[; <" TRISA equ 085h ;# ">
"1377
[; <" TRISB equ 086h ;# ">
"1439
[; <" TRISC equ 087h ;# ">
"1501
[; <" TRISD equ 088h ;# ">
"1563
[; <" TRISE equ 089h ;# ">
"1620
[; <" PIE1 equ 08Ch ;# ">
"1682
[; <" PIE2 equ 08Dh ;# ">
"1722
[; <" PCON equ 08Eh ;# ">
"1756
[; <" SSPCON2 equ 091h ;# ">
"1818
[; <" PR2 equ 092h ;# ">
"1825
[; <" SSPADD equ 093h ;# ">
"1832
[; <" SSPSTAT equ 094h ;# ">
"2001
[; <" TXSTA equ 098h ;# ">
"2082
[; <" SPBRG equ 099h ;# ">
"2089
[; <" CMCON equ 09Ch ;# ">
"2159
[; <" CVRCON equ 09Dh ;# ">
"2224
[; <" ADRESL equ 09Eh ;# ">
"2231
[; <" ADCON1 equ 09Fh ;# ">
"2290
[; <" EEDATA equ 010Ch ;# ">
"2297
[; <" EEADR equ 010Dh ;# ">
"2304
[; <" EEDATH equ 010Eh ;# ">
"2311
[; <" EEADRH equ 010Fh ;# ">
"2318
[; <" EECON1 equ 018Ch ;# ">
"2363
[; <" EECON2 equ 018Dh ;# ">
[v F1571 `Cuc ~T0 @X0 -> 4 `i t ]
"3 ECU/Keypad/ecu_keypad.c
[; ;ECU/Keypad/ecu_keypad.c: 3: static const uint8 keypad_btns[4][4] = { {'1', '2', '3', '/'},
[v _keypad_btns `F1571 ~T0 @X0 -> 4 `i s ]
[i _keypad_btns
:U ..
:U ..
-> -> 49 `ui `uc
-> -> 50 `ui `uc
-> -> 51 `ui `uc
-> -> 47 `ui `uc
..
:U ..
-> -> 52 `ui `uc
-> -> 53 `ui `uc
-> -> 54 `ui `uc
-> -> 42 `ui `uc
..
:U ..
-> -> 55 `ui `uc
-> -> 56 `ui `uc
-> -> 57 `ui `uc
-> -> 45 `ui `uc
..
:U ..
-> -> 35 `ui `uc
-> -> 48 `ui `uc
-> -> 61 `ui `uc
-> -> 43 `ui `uc
..
..
]
"8
[; ;ECU/Keypad/ecu_keypad.c: 8: std_ReturnType keypad_initialize(keypad_t* keypad)
[v _keypad_initialize `(uc ~T0 @X0 1 ef1`*S103 ]
"9
[; ;ECU/Keypad/ecu_keypad.c: 9: {
{
[e :U _keypad_initialize ]
"8
[; ;ECU/Keypad/ecu_keypad.c: 8: std_ReturnType keypad_initialize(keypad_t* keypad)
[v _keypad `*S103 ~T0 @X0 1 r1 ]
"9
[; ;ECU/Keypad/ecu_keypad.c: 9: {
[f ]
"10
[; ;ECU/Keypad/ecu_keypad.c: 10:     std_ReturnType ret = (std_ReturnType)0x00;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"11
[; ;ECU/Keypad/ecu_keypad.c: 11:     uint8 row_counter = 0;
[v _row_counter `uc ~T0 @X0 1 a ]
[e = _row_counter -> -> 0 `i `uc ]
"12
[; ;ECU/Keypad/ecu_keypad.c: 12:     uint8 columns_counter = 0;
[v _columns_counter `uc ~T0 @X0 1 a ]
[e = _columns_counter -> -> 0 `i `uc ]
"13
[; ;ECU/Keypad/ecu_keypad.c: 13:     if(((void*)0) == keypad)
[e $ ! == -> -> -> 0 `i `*v `*S103 _keypad 105  ]
"14
[; ;ECU/Keypad/ecu_keypad.c: 14:     {
{
"15
[; ;ECU/Keypad/ecu_keypad.c: 15:         ret = (std_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"16
[; ;ECU/Keypad/ecu_keypad.c: 16:     }
}
[e $U 106  ]
"17
[; ;ECU/Keypad/ecu_keypad.c: 17:     else
[e :U 105 ]
"18
[; ;ECU/Keypad/ecu_keypad.c: 18:     {
{
"19
[; ;ECU/Keypad/ecu_keypad.c: 19:         ret = (std_ReturnType)0x01;
[e = _ret -> -> 1 `i `uc ]
"20
[; ;ECU/Keypad/ecu_keypad.c: 20:         for(row_counter = 0; row_counter < 4; row_counter++)
{
[e = _row_counter -> -> 0 `i `uc ]
[e $ < -> _row_counter `i -> 4 `i 107  ]
[e $U 108  ]
[e :U 107 ]
"21
[; ;ECU/Keypad/ecu_keypad.c: 21:         {
{
"22
[; ;ECU/Keypad/ecu_keypad.c: 22:             ret &= gpio_pin_initialize(&(keypad->keypad_row_pins[row_counter]));
[e =& _ret -> ( _gpio_pin_initialize (1 -> &U *U + &U . *U _keypad 0 * -> _row_counter `ux -> -> # *U &U . *U _keypad 0 `ui `ux `*CS102 `uc ]
"23
[; ;ECU/Keypad/ecu_keypad.c: 23:         }
}
[e ++ _row_counter -> -> 1 `i `uc ]
[e $ < -> _row_counter `i -> 4 `i 107  ]
[e :U 108 ]
}
"24
[; ;ECU/Keypad/ecu_keypad.c: 24:         for(columns_counter = 0; columns_counter < 4; columns_counter++)
{
[e = _columns_counter -> -> 0 `i `uc ]
[e $ < -> _columns_counter `i -> 4 `i 110  ]
[e $U 111  ]
[e :U 110 ]
"25
[; ;ECU/Keypad/ecu_keypad.c: 25:         {
{
"26
[; ;ECU/Keypad/ecu_keypad.c: 26:             ret &= gpio_pin_initialize_direction(&(keypad->keypad_column_pins[columns_counter]));
[e =& _ret -> ( _gpio_pin_initialize_direction (1 -> &U *U + &U . *U _keypad 1 * -> _columns_counter `ux -> -> # *U &U . *U _keypad 1 `ui `ux `*CS102 `uc ]
"27
[; ;ECU/Keypad/ecu_keypad.c: 27:         }
}
[e ++ _columns_counter -> -> 1 `i `uc ]
[e $ < -> _columns_counter `i -> 4 `i 110  ]
[e :U 111 ]
}
"28
[; ;ECU/Keypad/ecu_keypad.c: 28:     }
}
[e :U 106 ]
"29
[; ;ECU/Keypad/ecu_keypad.c: 29:     return ret;
[e ) _ret ]
[e $UE 104  ]
"30
[; ;ECU/Keypad/ecu_keypad.c: 30: }
[e :UE 104 ]
}
"31
[; ;ECU/Keypad/ecu_keypad.c: 31: std_ReturnType keypad_get_value(keypad_t* keypad, uint8* value)
[v _keypad_get_value `(uc ~T0 @X0 1 ef2`*S103`*uc ]
"32
[; ;ECU/Keypad/ecu_keypad.c: 32: {
{
[e :U _keypad_get_value ]
"31
[; ;ECU/Keypad/ecu_keypad.c: 31: std_ReturnType keypad_get_value(keypad_t* keypad, uint8* value)
[v _keypad `*S103 ~T0 @X0 1 r1 ]
[v _value `*uc ~T0 @X0 1 r2 ]
"32
[; ;ECU/Keypad/ecu_keypad.c: 32: {
[f ]
"33
[; ;ECU/Keypad/ecu_keypad.c: 33:     std_ReturnType ret = (std_ReturnType)0x00;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"34
[; ;ECU/Keypad/ecu_keypad.c: 34:     uint8 row_counter = 0;
[v _row_counter `uc ~T0 @X0 1 a ]
[e = _row_counter -> -> 0 `i `uc ]
"35
[; ;ECU/Keypad/ecu_keypad.c: 35:     uint8 columns_counter = 0;
[v _columns_counter `uc ~T0 @X0 1 a ]
[e = _columns_counter -> -> 0 `i `uc ]
"36
[; ;ECU/Keypad/ecu_keypad.c: 36:     uint8 counter = 0;
[v _counter `uc ~T0 @X0 1 a ]
[e = _counter -> -> 0 `i `uc ]
"37
[; ;ECU/Keypad/ecu_keypad.c: 37:     logic_t col_logic;
[v _col_logic `E1501 ~T0 @X0 1 a ]
"38
[; ;ECU/Keypad/ecu_keypad.c: 38:     if((((void*)0) == keypad)||(((void*)0) == value))
[e $ ! || == -> -> -> 0 `i `*v `*S103 _keypad == -> -> -> 0 `i `*v `*uc _value 114  ]
"39
[; ;ECU/Keypad/ecu_keypad.c: 39:     {
{
"40
[; ;ECU/Keypad/ecu_keypad.c: 40:         ret = (std_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"41
[; ;ECU/Keypad/ecu_keypad.c: 41:     }
}
[e $U 115  ]
"42
[; ;ECU/Keypad/ecu_keypad.c: 42:     else
[e :U 114 ]
"43
[; ;ECU/Keypad/ecu_keypad.c: 43:     {
{
"44
[; ;ECU/Keypad/ecu_keypad.c: 44:         ret = (std_ReturnType)0x01;
[e = _ret -> -> 1 `i `uc ]
"45
[; ;ECU/Keypad/ecu_keypad.c: 45:         for(row_counter = 0; row_counter < 4; row_counter++)
{
[e = _row_counter -> -> 0 `i `uc ]
[e $ < -> _row_counter `i -> 4 `i 116  ]
[e $U 117  ]
[e :U 116 ]
"46
[; ;ECU/Keypad/ecu_keypad.c: 46:         {
{
"47
[; ;ECU/Keypad/ecu_keypad.c: 47:             for(counter = 0; counter < 4; counter++)
{
[e = _counter -> -> 0 `i `uc ]
[e $ < -> _counter `i -> 4 `i 119  ]
[e $U 120  ]
[e :U 119 ]
"48
[; ;ECU/Keypad/ecu_keypad.c: 48:                ret &= gpio_pin_write_logic(&(keypad->keypad_row_pins[counter]), GPIO_LOW);
[e =& _ret -> ( _gpio_pin_write_logic (2 , -> &U *U + &U . *U _keypad 0 * -> _counter `ux -> -> # *U &U . *U _keypad 0 `ui `ux `*CS102 . `E1501 0 `uc ]
[e ++ _counter -> -> 1 `i `uc ]
[e $ < -> _counter `i -> 4 `i 119  ]
[e :U 120 ]
}
"50
[; ;ECU/Keypad/ecu_keypad.c: 50:             ret &= gpio_pin_write_logic(&(keypad->keypad_row_pins[row_counter]), GPIO_HIGH);
[e =& _ret -> ( _gpio_pin_write_logic (2 , -> &U *U + &U . *U _keypad 0 * -> _row_counter `ux -> -> # *U &U . *U _keypad 0 `ui `ux `*CS102 . `E1501 1 `uc ]
"52
[; ;ECU/Keypad/ecu_keypad.c: 52:             for(columns_counter = 0; columns_counter < 4; columns_counter++)
{
[e = _columns_counter -> -> 0 `i `uc ]
[e $ < -> _columns_counter `i -> 4 `i 122  ]
[e $U 123  ]
[e :U 122 ]
"53
[; ;ECU/Keypad/ecu_keypad.c: 53:             {
{
"54
[; ;ECU/Keypad/ecu_keypad.c: 54:                 ret &= gpio_pin_read_logic(&(keypad->keypad_column_pins[columns_counter]), &col_logic);
[e =& _ret -> ( _gpio_pin_read_logic (2 , -> &U *U + &U . *U _keypad 1 * -> _columns_counter `ux -> -> # *U &U . *U _keypad 1 `ui `ux `*CS102 &U _col_logic `uc ]
"55
[; ;ECU/Keypad/ecu_keypad.c: 55:                 if(GPIO_HIGH == col_logic)
[e $ ! == -> . `E1501 1 `ui -> _col_logic `ui 125  ]
"56
[; ;ECU/Keypad/ecu_keypad.c: 56:                 {
{
"57
[; ;ECU/Keypad/ecu_keypad.c: 57:                     *value = keypad_btns[row_counter][columns_counter];
[e = *U _value *U + &U *U + &U _keypad_btns * -> _row_counter `ux -> * -> # *U &U *U &U _keypad_btns `ui -> -> 4 `i `ui `ux * -> _columns_counter `ux -> -> # *U &U *U + &U _keypad_btns * -> _row_counter `ux -> * -> # *U &U *U &U _keypad_btns `ui -> -> 4 `i `ui `ux `ui `ux ]
"58
[; ;ECU/Keypad/ecu_keypad.c: 58:                 }
}
[e :U 125 ]
"59
[; ;ECU/Keypad/ecu_keypad.c: 59:             }
}
[e ++ _columns_counter -> -> 1 `i `uc ]
[e $ < -> _columns_counter `i -> 4 `i 122  ]
[e :U 123 ]
}
"60
[; ;ECU/Keypad/ecu_keypad.c: 60:         }
}
[e ++ _row_counter -> -> 1 `i `uc ]
[e $ < -> _row_counter `i -> 4 `i 116  ]
[e :U 117 ]
}
"62
[; ;ECU/Keypad/ecu_keypad.c: 62:     }
}
[e :U 115 ]
"63
[; ;ECU/Keypad/ecu_keypad.c: 63:     return ret;
[e ) _ret ]
[e $UE 113  ]
"64
[; ;ECU/Keypad/ecu_keypad.c: 64: }
[e :UE 113 ]
}
