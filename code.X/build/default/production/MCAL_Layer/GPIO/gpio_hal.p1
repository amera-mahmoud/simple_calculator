Version 4.0 HI-TECH Software Intermediate Code
"1325 C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h
[v _TRISA `Vuc ~T0 @X0 0 e@133 ]
"1375
[v _TRISB `Vuc ~T0 @X0 0 e@134 ]
"1437
[v _TRISC `Vuc ~T0 @X0 0 e@135 ]
"1499
[v _TRISD `Vuc ~T0 @X0 0 e@136 ]
"1561
[v _TRISE `Vuc ~T0 @X0 0 e@137 ]
"166
[v _PORTA `Vuc ~T0 @X0 0 e@5 ]
"216
[v _PORTB `Vuc ~T0 @X0 0 e@6 ]
"278
[v _PORTC `Vuc ~T0 @X0 0 e@7 ]
"340
[v _PORTD `Vuc ~T0 @X0 0 e@8 ]
"402
[v _PORTE `Vuc ~T0 @X0 0 e@9 ]
"50 MCAL_Layer/GPIO/gpio_hal.h
[; ;MCAL_Layer/GPIO/gpio_hal.h: 50: {
[s S102 :3 `uc 1 :3 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S102 . port pin direction logic ]
"28 MCAL_Layer/GPIO/gpio_hal.c
[; ;MCAL_Layer/GPIO/gpio_hal.c: 28:         }
[c E1505 0 1 .. ]
[n E1505 . GPIO_OUTPUT GPIO_INPUT  ]
"46
[; ;MCAL_Layer/GPIO/gpio_hal.c: 46: std_ReturnType gpio_pin_write_logic(const pin_config_t* pin_config, logic_t logic)
[c E1501 0 1 .. ]
[n E1501 . GPIO_LOW GPIO_HIGH  ]
"114
[; ;MCAL_Layer/GPIO/gpio_hal.c: 114: std_ReturnType gpio_port_initialize_direction(const port_index_t port, uint8 direction)
[c E1519 0 1 2 3 4 .. ]
[n E1519 . PORTA_INDEX PORTB_INDEX PORTC_INDEX PORTD_INDEX PORTE_INDEX  ]
"54 C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h
[; <" INDF equ 00h ;# ">
"61
[; <" TMR0 equ 01h ;# ">
"68
[; <" PCL equ 02h ;# ">
"75
[; <" STATUS equ 03h ;# ">
"161
[; <" FSR equ 04h ;# ">
"168
[; <" PORTA equ 05h ;# ">
"218
[; <" PORTB equ 06h ;# ">
"280
[; <" PORTC equ 07h ;# ">
"342
[; <" PORTD equ 08h ;# ">
"404
[; <" PORTE equ 09h ;# ">
"436
[; <" PCLATH equ 0Ah ;# ">
"456
[; <" INTCON equ 0Bh ;# ">
"534
[; <" PIR1 equ 0Ch ;# ">
"596
[; <" PIR2 equ 0Dh ;# ">
"636
[; <" TMR1 equ 0Eh ;# ">
"643
[; <" TMR1L equ 0Eh ;# ">
"650
[; <" TMR1H equ 0Fh ;# ">
"657
[; <" T1CON equ 010h ;# ">
"732
[; <" TMR2 equ 011h ;# ">
"739
[; <" T2CON equ 012h ;# ">
"810
[; <" SSPBUF equ 013h ;# ">
"817
[; <" SSPCON equ 014h ;# ">
"887
[; <" CCPR1 equ 015h ;# ">
"894
[; <" CCPR1L equ 015h ;# ">
"901
[; <" CCPR1H equ 016h ;# ">
"908
[; <" CCP1CON equ 017h ;# ">
"966
[; <" RCSTA equ 018h ;# ">
"1061
[; <" TXREG equ 019h ;# ">
"1068
[; <" RCREG equ 01Ah ;# ">
"1075
[; <" CCPR2 equ 01Bh ;# ">
"1082
[; <" CCPR2L equ 01Bh ;# ">
"1089
[; <" CCPR2H equ 01Ch ;# ">
"1096
[; <" CCP2CON equ 01Dh ;# ">
"1154
[; <" ADRESH equ 01Eh ;# ">
"1161
[; <" ADCON0 equ 01Fh ;# ">
"1257
[; <" OPTION_REG equ 081h ;# ">
"1327
[; <" TRISA equ 085h ;# ">
"1377
[; <" TRISB equ 086h ;# ">
"1439
[; <" TRISC equ 087h ;# ">
"1501
[; <" TRISD equ 088h ;# ">
"1563
[; <" TRISE equ 089h ;# ">
"1620
[; <" PIE1 equ 08Ch ;# ">
"1682
[; <" PIE2 equ 08Dh ;# ">
"1722
[; <" PCON equ 08Eh ;# ">
"1756
[; <" SSPCON2 equ 091h ;# ">
"1818
[; <" PR2 equ 092h ;# ">
"1825
[; <" SSPADD equ 093h ;# ">
"1832
[; <" SSPSTAT equ 094h ;# ">
"2001
[; <" TXSTA equ 098h ;# ">
"2082
[; <" SPBRG equ 099h ;# ">
"2089
[; <" CMCON equ 09Ch ;# ">
"2159
[; <" CVRCON equ 09Dh ;# ">
"2224
[; <" ADRESL equ 09Eh ;# ">
"2231
[; <" ADCON1 equ 09Fh ;# ">
"2290
[; <" EEDATA equ 010Ch ;# ">
"2297
[; <" EEADR equ 010Dh ;# ">
"2304
[; <" EEDATH equ 010Eh ;# ">
"2311
[; <" EEADRH equ 010Fh ;# ">
"2318
[; <" EECON1 equ 018Ch ;# ">
"2363
[; <" EECON2 equ 018Dh ;# ">
"4 MCAL_Layer/GPIO/gpio_hal.c
[; ;MCAL_Layer/GPIO/gpio_hal.c: 4:  volatile uint8* tris_registers[] = { &TRISA, &TRISB, &TRISC, &TRISD, &TRISE };
[v _tris_registers `*Vuc ~T0 @X0 -> 5 `i e ]
[i _tris_registers
:U ..
&U _TRISA
&U _TRISB
&U _TRISC
&U _TRISD
&U _TRISE
..
]
"6
[; ;MCAL_Layer/GPIO/gpio_hal.c: 6:  volatile uint8* port_registers[] = { &PORTA, &PORTB, &PORTC, &PORTD, &PORTE };
[v _port_registers `*Vuc ~T0 @X0 -> 5 `i e ]
[i _port_registers
:U ..
&U _PORTA
&U _PORTB
&U _PORTC
&U _PORTD
&U _PORTE
..
]
"8
[; ;MCAL_Layer/GPIO/gpio_hal.c: 8: std_ReturnType gpio_pin_initialize_direction(const pin_config_t* pin_config)
[v _gpio_pin_initialize_direction `(uc ~T0 @X0 1 ef1`*CS102 ]
"9
[; ;MCAL_Layer/GPIO/gpio_hal.c: 9: {
{
[e :U _gpio_pin_initialize_direction ]
"8
[; ;MCAL_Layer/GPIO/gpio_hal.c: 8: std_ReturnType gpio_pin_initialize_direction(const pin_config_t* pin_config)
[v _pin_config `*CS102 ~T0 @X0 1 r1 ]
"9
[; ;MCAL_Layer/GPIO/gpio_hal.c: 9: {
[f ]
"10
[; ;MCAL_Layer/GPIO/gpio_hal.c: 10:     std_ReturnType ret = (std_ReturnType)0x00;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"11
[; ;MCAL_Layer/GPIO/gpio_hal.c: 11:     if((((void*)0) == pin_config)||(pin_config->pin > 8 - 1))
[e $ ! || == -> -> -> 0 `i `*v `*CS102 _pin_config > -> . *U _pin_config 1 `i - -> 8 `i -> 1 `i 104  ]
"12
[; ;MCAL_Layer/GPIO/gpio_hal.c: 12:     {
{
"13
[; ;MCAL_Layer/GPIO/gpio_hal.c: 13:         ret = (std_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"14
[; ;MCAL_Layer/GPIO/gpio_hal.c: 14:     }
}
[e $U 105  ]
"15
[; ;MCAL_Layer/GPIO/gpio_hal.c: 15:     else
[e :U 104 ]
"16
[; ;MCAL_Layer/GPIO/gpio_hal.c: 16:     {
{
"17
[; ;MCAL_Layer/GPIO/gpio_hal.c: 17:         ret = (std_ReturnType)0x01;
[e = _ret -> -> 1 `i `uc ]
"18
[; ;MCAL_Layer/GPIO/gpio_hal.c: 18:         switch(pin_config->direction)
[e $U 107  ]
"19
[; ;MCAL_Layer/GPIO/gpio_hal.c: 19:         {
{
"20
[; ;MCAL_Layer/GPIO/gpio_hal.c: 20:             case GPIO_OUTPUT:
[e :U 108 ]
"21
[; ;MCAL_Layer/GPIO/gpio_hal.c: 21:                 (*tris_registers[pin_config->port] &= ~((uint8)0x01 << pin_config->pin));
[e =& *U *U + &U _tris_registers * -> . *U _pin_config 0 `ux -> -> # *U &U _tris_registers `ui `ux -> ~ << -> -> -> 1 `i `uc `i -> . *U _pin_config 1 `i `uc ]
"22
[; ;MCAL_Layer/GPIO/gpio_hal.c: 22:                 break;
[e $U 106  ]
"23
[; ;MCAL_Layer/GPIO/gpio_hal.c: 23:             case GPIO_INPUT:
[e :U 109 ]
"24
[; ;MCAL_Layer/GPIO/gpio_hal.c: 24:                 (*tris_registers[pin_config->port] |= ((uint8)0x01 << pin_config->pin));
[e =| *U *U + &U _tris_registers * -> . *U _pin_config 0 `ux -> -> # *U &U _tris_registers `ui `ux -> << -> -> -> 1 `i `uc `i -> . *U _pin_config 1 `i `uc ]
"25
[; ;MCAL_Layer/GPIO/gpio_hal.c: 25:                 break;
[e $U 106  ]
"26
[; ;MCAL_Layer/GPIO/gpio_hal.c: 26:             default:
[e :U 110 ]
"27
[; ;MCAL_Layer/GPIO/gpio_hal.c: 27:                 ret = (std_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"28
[; ;MCAL_Layer/GPIO/gpio_hal.c: 28:         }
}
[e $U 106  ]
[e :U 107 ]
[e [\ -> . *U _pin_config 2 `i , $ . `E1505 0 108
 , $ . `E1505 1 109
 110 ]
[e :U 106 ]
"29
[; ;MCAL_Layer/GPIO/gpio_hal.c: 29:     }
}
[e :U 105 ]
"30
[; ;MCAL_Layer/GPIO/gpio_hal.c: 30:     return ret;
[e ) _ret ]
[e $UE 103  ]
"31
[; ;MCAL_Layer/GPIO/gpio_hal.c: 31: }
[e :UE 103 ]
}
"32
[; ;MCAL_Layer/GPIO/gpio_hal.c: 32: std_ReturnType gpio_pin_get_direction(const pin_config_t* pin_config, direction_t* direction)
[v _gpio_pin_get_direction `(uc ~T0 @X0 1 ef2`*CS102`*E1505 ]
"33
[; ;MCAL_Layer/GPIO/gpio_hal.c: 33: {
{
[e :U _gpio_pin_get_direction ]
"32
[; ;MCAL_Layer/GPIO/gpio_hal.c: 32: std_ReturnType gpio_pin_get_direction(const pin_config_t* pin_config, direction_t* direction)
[v _pin_config `*CS102 ~T0 @X0 1 r1 ]
[v _direction `*E1505 ~T0 @X0 1 r2 ]
"33
[; ;MCAL_Layer/GPIO/gpio_hal.c: 33: {
[f ]
"34
[; ;MCAL_Layer/GPIO/gpio_hal.c: 34:     std_ReturnType ret = (std_ReturnType)0x00;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"35
[; ;MCAL_Layer/GPIO/gpio_hal.c: 35:     if((((void*)0) == pin_config)||(((void*)0) == direction)||(pin_config->pin > 8 - 1))
[e $ ! || || == -> -> -> 0 `i `*v `*CS102 _pin_config == -> -> -> 0 `i `*v `*E1505 _direction > -> . *U _pin_config 1 `i - -> 8 `i -> 1 `i 112  ]
"36
[; ;MCAL_Layer/GPIO/gpio_hal.c: 36:     {
{
"37
[; ;MCAL_Layer/GPIO/gpio_hal.c: 37:         ret = (std_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"38
[; ;MCAL_Layer/GPIO/gpio_hal.c: 38:     }
}
[e $U 113  ]
"39
[; ;MCAL_Layer/GPIO/gpio_hal.c: 39:     else
[e :U 112 ]
"40
[; ;MCAL_Layer/GPIO/gpio_hal.c: 40:     {
{
"41
[; ;MCAL_Layer/GPIO/gpio_hal.c: 41:         *direction = ((*tris_registers[pin_config->port] >> pin_config->pin) & (uint8)0x01);
[e = *U _direction -> & >> -> *U *U + &U _tris_registers * -> . *U _pin_config 0 `ux -> -> # *U &U _tris_registers `ui `ux `i -> . *U _pin_config 1 `i -> -> -> 1 `i `uc `i `E1505 ]
"42
[; ;MCAL_Layer/GPIO/gpio_hal.c: 42:         ret = (std_ReturnType)0x01;
[e = _ret -> -> 1 `i `uc ]
"43
[; ;MCAL_Layer/GPIO/gpio_hal.c: 43:     }
}
[e :U 113 ]
"44
[; ;MCAL_Layer/GPIO/gpio_hal.c: 44:     return ret;
[e ) _ret ]
[e $UE 111  ]
"45
[; ;MCAL_Layer/GPIO/gpio_hal.c: 45: }
[e :UE 111 ]
}
"46
[; ;MCAL_Layer/GPIO/gpio_hal.c: 46: std_ReturnType gpio_pin_write_logic(const pin_config_t* pin_config, logic_t logic)
[v _gpio_pin_write_logic `(uc ~T0 @X0 1 ef2`*CS102`E1501 ]
"47
[; ;MCAL_Layer/GPIO/gpio_hal.c: 47: {
{
[e :U _gpio_pin_write_logic ]
"46
[; ;MCAL_Layer/GPIO/gpio_hal.c: 46: std_ReturnType gpio_pin_write_logic(const pin_config_t* pin_config, logic_t logic)
[v _pin_config `*CS102 ~T0 @X0 1 r1 ]
[v _logic `E1501 ~T0 @X0 1 r2 ]
"47
[; ;MCAL_Layer/GPIO/gpio_hal.c: 47: {
[f ]
"48
[; ;MCAL_Layer/GPIO/gpio_hal.c: 48:     std_ReturnType ret = (std_ReturnType)0x00;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"49
[; ;MCAL_Layer/GPIO/gpio_hal.c: 49:     if((((void*)0) == pin_config)||(pin_config->pin > 8 - 1))
[e $ ! || == -> -> -> 0 `i `*v `*CS102 _pin_config > -> . *U _pin_config 1 `i - -> 8 `i -> 1 `i 115  ]
"50
[; ;MCAL_Layer/GPIO/gpio_hal.c: 50:     {
{
"51
[; ;MCAL_Layer/GPIO/gpio_hal.c: 51:         ret = (std_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"52
[; ;MCAL_Layer/GPIO/gpio_hal.c: 52:     }
}
[e $U 116  ]
"53
[; ;MCAL_Layer/GPIO/gpio_hal.c: 53:     else
[e :U 115 ]
"54
[; ;MCAL_Layer/GPIO/gpio_hal.c: 54:     {
{
"55
[; ;MCAL_Layer/GPIO/gpio_hal.c: 55:         ret = (std_ReturnType)0x01;
[e = _ret -> -> 1 `i `uc ]
"56
[; ;MCAL_Layer/GPIO/gpio_hal.c: 56:         switch(logic)
[e $U 118  ]
"57
[; ;MCAL_Layer/GPIO/gpio_hal.c: 57:         {
{
"58
[; ;MCAL_Layer/GPIO/gpio_hal.c: 58:             case GPIO_LOW:
[e :U 119 ]
"59
[; ;MCAL_Layer/GPIO/gpio_hal.c: 59:                 (*port_registers[pin_config->port] &= ~((uint8)0x01 << pin_config->pin));
[e =& *U *U + &U _port_registers * -> . *U _pin_config 0 `ux -> -> # *U &U _port_registers `ui `ux -> ~ << -> -> -> 1 `i `uc `i -> . *U _pin_config 1 `i `uc ]
"60
[; ;MCAL_Layer/GPIO/gpio_hal.c: 60:                 break;
[e $U 117  ]
"61
[; ;MCAL_Layer/GPIO/gpio_hal.c: 61:             case GPIO_HIGH:
[e :U 120 ]
"62
[; ;MCAL_Layer/GPIO/gpio_hal.c: 62:                 (*port_registers[pin_config->port] |= ((uint8)0x01 << pin_config->pin));
[e =| *U *U + &U _port_registers * -> . *U _pin_config 0 `ux -> -> # *U &U _port_registers `ui `ux -> << -> -> -> 1 `i `uc `i -> . *U _pin_config 1 `i `uc ]
"63
[; ;MCAL_Layer/GPIO/gpio_hal.c: 63:                 break;
[e $U 117  ]
"64
[; ;MCAL_Layer/GPIO/gpio_hal.c: 64:             default:
[e :U 121 ]
"65
[; ;MCAL_Layer/GPIO/gpio_hal.c: 65:                 ret = (std_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"66
[; ;MCAL_Layer/GPIO/gpio_hal.c: 66:         }
}
[e $U 117  ]
[e :U 118 ]
[e [\ -> _logic `ui , $ -> . `E1501 0 `ui 119
 , $ -> . `E1501 1 `ui 120
 121 ]
[e :U 117 ]
"67
[; ;MCAL_Layer/GPIO/gpio_hal.c: 67:     }
}
[e :U 116 ]
"68
[; ;MCAL_Layer/GPIO/gpio_hal.c: 68:     return ret;
[e ) _ret ]
[e $UE 114  ]
"69
[; ;MCAL_Layer/GPIO/gpio_hal.c: 69: }
[e :UE 114 ]
}
"70
[; ;MCAL_Layer/GPIO/gpio_hal.c: 70: std_ReturnType gpio_pin_read_logic(const pin_config_t* pin_config, logic_t* logic)
[v _gpio_pin_read_logic `(uc ~T0 @X0 1 ef2`*CS102`*E1501 ]
"71
[; ;MCAL_Layer/GPIO/gpio_hal.c: 71: {
{
[e :U _gpio_pin_read_logic ]
"70
[; ;MCAL_Layer/GPIO/gpio_hal.c: 70: std_ReturnType gpio_pin_read_logic(const pin_config_t* pin_config, logic_t* logic)
[v _pin_config `*CS102 ~T0 @X0 1 r1 ]
[v _logic `*E1501 ~T0 @X0 1 r2 ]
"71
[; ;MCAL_Layer/GPIO/gpio_hal.c: 71: {
[f ]
"72
[; ;MCAL_Layer/GPIO/gpio_hal.c: 72:     std_ReturnType ret = (std_ReturnType)0x00;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"73
[; ;MCAL_Layer/GPIO/gpio_hal.c: 73:     if((((void*)0) == pin_config)||(((void*)0) == logic)||(pin_config->pin > 8 - 1))
[e $ ! || || == -> -> -> 0 `i `*v `*CS102 _pin_config == -> -> -> 0 `i `*v `*E1501 _logic > -> . *U _pin_config 1 `i - -> 8 `i -> 1 `i 123  ]
"74
[; ;MCAL_Layer/GPIO/gpio_hal.c: 74:     {
{
"75
[; ;MCAL_Layer/GPIO/gpio_hal.c: 75:         ret = (std_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"76
[; ;MCAL_Layer/GPIO/gpio_hal.c: 76:     }
}
[e $U 124  ]
"77
[; ;MCAL_Layer/GPIO/gpio_hal.c: 77:     else
[e :U 123 ]
"78
[; ;MCAL_Layer/GPIO/gpio_hal.c: 78:     {
{
"79
[; ;MCAL_Layer/GPIO/gpio_hal.c: 79:         *logic = ((*port_registers[pin_config->port] >> pin_config->pin) & (uint8)0x01);
[e = *U _logic -> & >> -> *U *U + &U _port_registers * -> . *U _pin_config 0 `ux -> -> # *U &U _port_registers `ui `ux `i -> . *U _pin_config 1 `i -> -> -> 1 `i `uc `i `E1501 ]
"80
[; ;MCAL_Layer/GPIO/gpio_hal.c: 80:         ret = (std_ReturnType)0x01;
[e = _ret -> -> 1 `i `uc ]
"81
[; ;MCAL_Layer/GPIO/gpio_hal.c: 81:     }
}
[e :U 124 ]
"82
[; ;MCAL_Layer/GPIO/gpio_hal.c: 82:     return ret;
[e ) _ret ]
[e $UE 122  ]
"83
[; ;MCAL_Layer/GPIO/gpio_hal.c: 83: }
[e :UE 122 ]
}
"84
[; ;MCAL_Layer/GPIO/gpio_hal.c: 84: std_ReturnType gpio_pin_toggle_logic(const pin_config_t* pin_config)
[v _gpio_pin_toggle_logic `(uc ~T0 @X0 1 ef1`*CS102 ]
"85
[; ;MCAL_Layer/GPIO/gpio_hal.c: 85: {
{
[e :U _gpio_pin_toggle_logic ]
"84
[; ;MCAL_Layer/GPIO/gpio_hal.c: 84: std_ReturnType gpio_pin_toggle_logic(const pin_config_t* pin_config)
[v _pin_config `*CS102 ~T0 @X0 1 r1 ]
"85
[; ;MCAL_Layer/GPIO/gpio_hal.c: 85: {
[f ]
"86
[; ;MCAL_Layer/GPIO/gpio_hal.c: 86:     std_ReturnType ret = (std_ReturnType)0x00;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"87
[; ;MCAL_Layer/GPIO/gpio_hal.c: 87:     if((((void*)0) == pin_config)||(pin_config->pin > 8 - 1))
[e $ ! || == -> -> -> 0 `i `*v `*CS102 _pin_config > -> . *U _pin_config 1 `i - -> 8 `i -> 1 `i 126  ]
"88
[; ;MCAL_Layer/GPIO/gpio_hal.c: 88:     {
{
"89
[; ;MCAL_Layer/GPIO/gpio_hal.c: 89:         ret = (std_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"90
[; ;MCAL_Layer/GPIO/gpio_hal.c: 90:     }
}
[e $U 127  ]
"91
[; ;MCAL_Layer/GPIO/gpio_hal.c: 91:     else
[e :U 126 ]
"92
[; ;MCAL_Layer/GPIO/gpio_hal.c: 92:     {
{
"93
[; ;MCAL_Layer/GPIO/gpio_hal.c: 93:         (*port_registers[pin_config->port] ^= ((uint8)0x01 << pin_config->pin));
[e =^ *U *U + &U _port_registers * -> . *U _pin_config 0 `ux -> -> # *U &U _port_registers `ui `ux -> << -> -> -> 1 `i `uc `i -> . *U _pin_config 1 `i `uc ]
"94
[; ;MCAL_Layer/GPIO/gpio_hal.c: 94:         ret = (std_ReturnType)0x01;
[e = _ret -> -> 1 `i `uc ]
"95
[; ;MCAL_Layer/GPIO/gpio_hal.c: 95:     }
}
[e :U 127 ]
"96
[; ;MCAL_Layer/GPIO/gpio_hal.c: 96:     return ret;
[e ) _ret ]
[e $UE 125  ]
"97
[; ;MCAL_Layer/GPIO/gpio_hal.c: 97: }
[e :UE 125 ]
}
"98
[; ;MCAL_Layer/GPIO/gpio_hal.c: 98: std_ReturnType gpio_pin_initialize(const pin_config_t* pin_config)
[v _gpio_pin_initialize `(uc ~T0 @X0 1 ef1`*CS102 ]
"99
[; ;MCAL_Layer/GPIO/gpio_hal.c: 99: {
{
[e :U _gpio_pin_initialize ]
"98
[; ;MCAL_Layer/GPIO/gpio_hal.c: 98: std_ReturnType gpio_pin_initialize(const pin_config_t* pin_config)
[v _pin_config `*CS102 ~T0 @X0 1 r1 ]
"99
[; ;MCAL_Layer/GPIO/gpio_hal.c: 99: {
[f ]
"100
[; ;MCAL_Layer/GPIO/gpio_hal.c: 100:     std_ReturnType ret = (std_ReturnType)0x00;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"101
[; ;MCAL_Layer/GPIO/gpio_hal.c: 101:     if((((void*)0) == pin_config)||(pin_config->pin > 8 - 1))
[e $ ! || == -> -> -> 0 `i `*v `*CS102 _pin_config > -> . *U _pin_config 1 `i - -> 8 `i -> 1 `i 129  ]
"102
[; ;MCAL_Layer/GPIO/gpio_hal.c: 102:     {
{
"103
[; ;MCAL_Layer/GPIO/gpio_hal.c: 103:         ret = (std_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"104
[; ;MCAL_Layer/GPIO/gpio_hal.c: 104:     }
}
[e $U 130  ]
"105
[; ;MCAL_Layer/GPIO/gpio_hal.c: 105:     else
[e :U 129 ]
"106
[; ;MCAL_Layer/GPIO/gpio_hal.c: 106:     {
{
"107
[; ;MCAL_Layer/GPIO/gpio_hal.c: 107:         ret = (std_ReturnType)0x01;
[e = _ret -> -> 1 `i `uc ]
"108
[; ;MCAL_Layer/GPIO/gpio_hal.c: 108:         ret &= gpio_pin_initialize_direction(pin_config);
[e =& _ret -> ( _gpio_pin_initialize_direction (1 _pin_config `uc ]
"109
[; ;MCAL_Layer/GPIO/gpio_hal.c: 109:         ret &= gpio_pin_write_logic(pin_config, pin_config->logic);
[e =& _ret -> ( _gpio_pin_write_logic (2 , _pin_config -> . *U _pin_config 3 `E1501 `uc ]
"110
[; ;MCAL_Layer/GPIO/gpio_hal.c: 110:     }
}
[e :U 130 ]
"111
[; ;MCAL_Layer/GPIO/gpio_hal.c: 111:     return ret;
[e ) _ret ]
[e $UE 128  ]
"112
[; ;MCAL_Layer/GPIO/gpio_hal.c: 112: }
[e :UE 128 ]
}
"114
[; ;MCAL_Layer/GPIO/gpio_hal.c: 114: std_ReturnType gpio_port_initialize_direction(const port_index_t port, uint8 direction)
[v _gpio_port_initialize_direction `(uc ~T0 @X0 1 ef2`CE1519`uc ]
"115
[; ;MCAL_Layer/GPIO/gpio_hal.c: 115: {
{
[e :U _gpio_port_initialize_direction ]
"114
[; ;MCAL_Layer/GPIO/gpio_hal.c: 114: std_ReturnType gpio_port_initialize_direction(const port_index_t port, uint8 direction)
[v _port `CE1519 ~T0 @X0 1 r1 ]
[v _direction `uc ~T0 @X0 1 r2 ]
"115
[; ;MCAL_Layer/GPIO/gpio_hal.c: 115: {
[f ]
"116
[; ;MCAL_Layer/GPIO/gpio_hal.c: 116:     std_ReturnType ret = (std_ReturnType)0x00;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"117
[; ;MCAL_Layer/GPIO/gpio_hal.c: 117:     if(port > 4 -1)
[e $ ! > -> _port `ui -> - -> 4 `i -> 1 `i `ui 132  ]
"118
[; ;MCAL_Layer/GPIO/gpio_hal.c: 118:     {
{
"119
[; ;MCAL_Layer/GPIO/gpio_hal.c: 119:         ret = (std_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"120
[; ;MCAL_Layer/GPIO/gpio_hal.c: 120:     }
}
[e $U 133  ]
"121
[; ;MCAL_Layer/GPIO/gpio_hal.c: 121:     else
[e :U 132 ]
"122
[; ;MCAL_Layer/GPIO/gpio_hal.c: 122:     {
{
"123
[; ;MCAL_Layer/GPIO/gpio_hal.c: 123:         *tris_registers[port] = direction;
[e = *U *U + &U _tris_registers * -> _port `ux -> -> # *U &U _tris_registers `ui `ux _direction ]
"124
[; ;MCAL_Layer/GPIO/gpio_hal.c: 124:         ret = (std_ReturnType)0x01;
[e = _ret -> -> 1 `i `uc ]
"125
[; ;MCAL_Layer/GPIO/gpio_hal.c: 125:     }
}
[e :U 133 ]
"126
[; ;MCAL_Layer/GPIO/gpio_hal.c: 126:     return ret;
[e ) _ret ]
[e $UE 131  ]
"127
[; ;MCAL_Layer/GPIO/gpio_hal.c: 127: }
[e :UE 131 ]
}
"128
[; ;MCAL_Layer/GPIO/gpio_hal.c: 128: std_ReturnType gpio_port_get_direction(const port_index_t port, uint8* direction)
[v _gpio_port_get_direction `(uc ~T0 @X0 1 ef2`CE1519`*uc ]
"129
[; ;MCAL_Layer/GPIO/gpio_hal.c: 129: {
{
[e :U _gpio_port_get_direction ]
"128
[; ;MCAL_Layer/GPIO/gpio_hal.c: 128: std_ReturnType gpio_port_get_direction(const port_index_t port, uint8* direction)
[v _port `CE1519 ~T0 @X0 1 r1 ]
[v _direction `*uc ~T0 @X0 1 r2 ]
"129
[; ;MCAL_Layer/GPIO/gpio_hal.c: 129: {
[f ]
"130
[; ;MCAL_Layer/GPIO/gpio_hal.c: 130:     std_ReturnType ret = (std_ReturnType)0x00;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"131
[; ;MCAL_Layer/GPIO/gpio_hal.c: 131:     if((port > 4 -1)||(((void*)0) == direction))
[e $ ! || > -> _port `ui -> - -> 4 `i -> 1 `i `ui == -> -> -> 0 `i `*v `*uc _direction 135  ]
"132
[; ;MCAL_Layer/GPIO/gpio_hal.c: 132:     {
{
"133
[; ;MCAL_Layer/GPIO/gpio_hal.c: 133:         ret = (std_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"134
[; ;MCAL_Layer/GPIO/gpio_hal.c: 134:     }
}
[e $U 136  ]
"135
[; ;MCAL_Layer/GPIO/gpio_hal.c: 135:     else
[e :U 135 ]
"136
[; ;MCAL_Layer/GPIO/gpio_hal.c: 136:     {
{
"137
[; ;MCAL_Layer/GPIO/gpio_hal.c: 137:         *direction = *tris_registers[port];
[e = *U _direction *U *U + &U _tris_registers * -> _port `ux -> -> # *U &U _tris_registers `ui `ux ]
"138
[; ;MCAL_Layer/GPIO/gpio_hal.c: 138:         ret = (std_ReturnType)0x01;
[e = _ret -> -> 1 `i `uc ]
"139
[; ;MCAL_Layer/GPIO/gpio_hal.c: 139:     }
}
[e :U 136 ]
"140
[; ;MCAL_Layer/GPIO/gpio_hal.c: 140:     return ret;
[e ) _ret ]
[e $UE 134  ]
"141
[; ;MCAL_Layer/GPIO/gpio_hal.c: 141: }
[e :UE 134 ]
}
"142
[; ;MCAL_Layer/GPIO/gpio_hal.c: 142: std_ReturnType gpio_port_write_logic(const port_index_t port, uint8 logic)
[v _gpio_port_write_logic `(uc ~T0 @X0 1 ef2`CE1519`uc ]
"143
[; ;MCAL_Layer/GPIO/gpio_hal.c: 143: {
{
[e :U _gpio_port_write_logic ]
"142
[; ;MCAL_Layer/GPIO/gpio_hal.c: 142: std_ReturnType gpio_port_write_logic(const port_index_t port, uint8 logic)
[v _port `CE1519 ~T0 @X0 1 r1 ]
[v _logic `uc ~T0 @X0 1 r2 ]
"143
[; ;MCAL_Layer/GPIO/gpio_hal.c: 143: {
[f ]
"144
[; ;MCAL_Layer/GPIO/gpio_hal.c: 144:     std_ReturnType ret = (std_ReturnType)0x00;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"145
[; ;MCAL_Layer/GPIO/gpio_hal.c: 145:     if(port > 4 -1)
[e $ ! > -> _port `ui -> - -> 4 `i -> 1 `i `ui 138  ]
"146
[; ;MCAL_Layer/GPIO/gpio_hal.c: 146:     {
{
"147
[; ;MCAL_Layer/GPIO/gpio_hal.c: 147:         ret = (std_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"148
[; ;MCAL_Layer/GPIO/gpio_hal.c: 148:     }
}
[e $U 139  ]
"149
[; ;MCAL_Layer/GPIO/gpio_hal.c: 149:     else
[e :U 138 ]
"150
[; ;MCAL_Layer/GPIO/gpio_hal.c: 150:     {
{
"151
[; ;MCAL_Layer/GPIO/gpio_hal.c: 151:         *port_registers[port] = logic;
[e = *U *U + &U _port_registers * -> _port `ux -> -> # *U &U _port_registers `ui `ux _logic ]
"152
[; ;MCAL_Layer/GPIO/gpio_hal.c: 152:         ret = (std_ReturnType)0x01;
[e = _ret -> -> 1 `i `uc ]
"153
[; ;MCAL_Layer/GPIO/gpio_hal.c: 153:     }
}
[e :U 139 ]
"154
[; ;MCAL_Layer/GPIO/gpio_hal.c: 154:     return ret;
[e ) _ret ]
[e $UE 137  ]
"155
[; ;MCAL_Layer/GPIO/gpio_hal.c: 155: }
[e :UE 137 ]
}
"156
[; ;MCAL_Layer/GPIO/gpio_hal.c: 156: std_ReturnType gpio_port_read_logic(const port_index_t port, uint8* logic)
[v _gpio_port_read_logic `(uc ~T0 @X0 1 ef2`CE1519`*uc ]
"157
[; ;MCAL_Layer/GPIO/gpio_hal.c: 157: {
{
[e :U _gpio_port_read_logic ]
"156
[; ;MCAL_Layer/GPIO/gpio_hal.c: 156: std_ReturnType gpio_port_read_logic(const port_index_t port, uint8* logic)
[v _port `CE1519 ~T0 @X0 1 r1 ]
[v _logic `*uc ~T0 @X0 1 r2 ]
"157
[; ;MCAL_Layer/GPIO/gpio_hal.c: 157: {
[f ]
"158
[; ;MCAL_Layer/GPIO/gpio_hal.c: 158:     std_ReturnType ret = (std_ReturnType)0x00;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"159
[; ;MCAL_Layer/GPIO/gpio_hal.c: 159:     if((port > 4 -1)||(((void*)0) == logic))
[e $ ! || > -> _port `ui -> - -> 4 `i -> 1 `i `ui == -> -> -> 0 `i `*v `*uc _logic 141  ]
"160
[; ;MCAL_Layer/GPIO/gpio_hal.c: 160:     {
{
"161
[; ;MCAL_Layer/GPIO/gpio_hal.c: 161:         ret = (std_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"162
[; ;MCAL_Layer/GPIO/gpio_hal.c: 162:     }
}
[e $U 142  ]
"163
[; ;MCAL_Layer/GPIO/gpio_hal.c: 163:     else
[e :U 141 ]
"164
[; ;MCAL_Layer/GPIO/gpio_hal.c: 164:     {
{
"165
[; ;MCAL_Layer/GPIO/gpio_hal.c: 165:         *logic = *port_registers[port];
[e = *U _logic *U *U + &U _port_registers * -> _port `ux -> -> # *U &U _port_registers `ui `ux ]
"166
[; ;MCAL_Layer/GPIO/gpio_hal.c: 166:          ret = (std_ReturnType)0x01;
[e = _ret -> -> 1 `i `uc ]
"167
[; ;MCAL_Layer/GPIO/gpio_hal.c: 167:     }
}
[e :U 142 ]
"168
[; ;MCAL_Layer/GPIO/gpio_hal.c: 168:     return ret;
[e ) _ret ]
[e $UE 140  ]
"169
[; ;MCAL_Layer/GPIO/gpio_hal.c: 169: }
[e :UE 140 ]
}
"170
[; ;MCAL_Layer/GPIO/gpio_hal.c: 170: std_ReturnType gpio_port_toggle_logic(const port_index_t port)
[v _gpio_port_toggle_logic `(uc ~T0 @X0 1 ef1`CE1519 ]
"171
[; ;MCAL_Layer/GPIO/gpio_hal.c: 171: {
{
[e :U _gpio_port_toggle_logic ]
"170
[; ;MCAL_Layer/GPIO/gpio_hal.c: 170: std_ReturnType gpio_port_toggle_logic(const port_index_t port)
[v _port `CE1519 ~T0 @X0 1 r1 ]
"171
[; ;MCAL_Layer/GPIO/gpio_hal.c: 171: {
[f ]
"172
[; ;MCAL_Layer/GPIO/gpio_hal.c: 172:     std_ReturnType ret = (std_ReturnType)0x00;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"173
[; ;MCAL_Layer/GPIO/gpio_hal.c: 173:     if(port > 4 -1)
[e $ ! > -> _port `ui -> - -> 4 `i -> 1 `i `ui 144  ]
"174
[; ;MCAL_Layer/GPIO/gpio_hal.c: 174:     {
{
"175
[; ;MCAL_Layer/GPIO/gpio_hal.c: 175:         ret = (std_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"176
[; ;MCAL_Layer/GPIO/gpio_hal.c: 176:     }
}
[e $U 145  ]
"177
[; ;MCAL_Layer/GPIO/gpio_hal.c: 177:     else
[e :U 144 ]
"178
[; ;MCAL_Layer/GPIO/gpio_hal.c: 178:     {
{
"179
[; ;MCAL_Layer/GPIO/gpio_hal.c: 179:         *port_registers[port] ^= (uint8)0xFF;
[e =^ *U *U + &U _port_registers * -> _port `ux -> -> # *U &U _port_registers `ui `ux -> -> -> 255 `i `uc `uc ]
"180
[; ;MCAL_Layer/GPIO/gpio_hal.c: 180:         ret = (std_ReturnType)0x01;
[e = _ret -> -> 1 `i `uc ]
"181
[; ;MCAL_Layer/GPIO/gpio_hal.c: 181:     }
}
[e :U 145 ]
"182
[; ;MCAL_Layer/GPIO/gpio_hal.c: 182:     return ret;
[e ) _ret ]
[e $UE 143  ]
"183
[; ;MCAL_Layer/GPIO/gpio_hal.c: 183: }
[e :UE 143 ]
}
