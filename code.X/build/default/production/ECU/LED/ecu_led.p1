Version 4.0 HI-TECH Software Intermediate Code
"17 ECU/LED/ecu_led.h
[; ;ECU/LED/ecu_led.h: 17: {
[s S103 :3 `uc 1 :3 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S103 . port pin logic reserved ]
"50 ECU/LED/../../MCAL_Layer/GPIO/gpio_hal.h
[; ;ECU/LED/../../MCAL_Layer/GPIO/gpio_hal.h: 50: {
[s S102 :3 `uc 1 :3 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S102 . port pin direction logic ]
"12 ECU/LED/ecu_led.c
[; ;ECU/LED/ecu_led.c: 12:         pin_config_t pin_obj = { .port = led->port, .pin = led->pin, .direction = GPIO_OUTPUT,
[c E1505 0 1 .. ]
[n E1505 . GPIO_OUTPUT GPIO_INPUT  ]
"78 ECU/LED/../../MCAL_Layer/GPIO/gpio_hal.h
[; ;ECU/LED/../../MCAL_Layer/GPIO/gpio_hal.h: 78: std_ReturnType gpio_pin_initialize(const pin_config_t* pin_config);
[v _gpio_pin_initialize `(uc ~T0 @X0 0 ef1`*CS102 ]
"31 ECU/LED/ecu_led.c
[; ;ECU/LED/ecu_led.c: 31:         ret &= gpio_pin_write_logic(&pin_obj, GPIO_LOW);
[c E1501 0 1 .. ]
[n E1501 . GPIO_LOW GPIO_HIGH  ]
"75 ECU/LED/../../MCAL_Layer/GPIO/gpio_hal.h
[; ;ECU/LED/../../MCAL_Layer/GPIO/gpio_hal.h: 75: std_ReturnType gpio_pin_write_logic(const pin_config_t* pin_config, logic_t logic);
[v _gpio_pin_write_logic `(uc ~T0 @X0 0 ef2`*CS102`E1501 ]
"77
[; ;ECU/LED/../../MCAL_Layer/GPIO/gpio_hal.h: 77: std_ReturnType gpio_pin_toggle_logic(const pin_config_t* pin_config);
[v _gpio_pin_toggle_logic `(uc ~T0 @X0 0 ef1`*CS102 ]
"54 C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h
[; <" INDF equ 00h ;# ">
"61
[; <" TMR0 equ 01h ;# ">
"68
[; <" PCL equ 02h ;# ">
"75
[; <" STATUS equ 03h ;# ">
"161
[; <" FSR equ 04h ;# ">
"168
[; <" PORTA equ 05h ;# ">
"218
[; <" PORTB equ 06h ;# ">
"280
[; <" PORTC equ 07h ;# ">
"342
[; <" PORTD equ 08h ;# ">
"404
[; <" PORTE equ 09h ;# ">
"436
[; <" PCLATH equ 0Ah ;# ">
"456
[; <" INTCON equ 0Bh ;# ">
"534
[; <" PIR1 equ 0Ch ;# ">
"596
[; <" PIR2 equ 0Dh ;# ">
"636
[; <" TMR1 equ 0Eh ;# ">
"643
[; <" TMR1L equ 0Eh ;# ">
"650
[; <" TMR1H equ 0Fh ;# ">
"657
[; <" T1CON equ 010h ;# ">
"732
[; <" TMR2 equ 011h ;# ">
"739
[; <" T2CON equ 012h ;# ">
"810
[; <" SSPBUF equ 013h ;# ">
"817
[; <" SSPCON equ 014h ;# ">
"887
[; <" CCPR1 equ 015h ;# ">
"894
[; <" CCPR1L equ 015h ;# ">
"901
[; <" CCPR1H equ 016h ;# ">
"908
[; <" CCP1CON equ 017h ;# ">
"966
[; <" RCSTA equ 018h ;# ">
"1061
[; <" TXREG equ 019h ;# ">
"1068
[; <" RCREG equ 01Ah ;# ">
"1075
[; <" CCPR2 equ 01Bh ;# ">
"1082
[; <" CCPR2L equ 01Bh ;# ">
"1089
[; <" CCPR2H equ 01Ch ;# ">
"1096
[; <" CCP2CON equ 01Dh ;# ">
"1154
[; <" ADRESH equ 01Eh ;# ">
"1161
[; <" ADCON0 equ 01Fh ;# ">
"1257
[; <" OPTION_REG equ 081h ;# ">
"1327
[; <" TRISA equ 085h ;# ">
"1377
[; <" TRISB equ 086h ;# ">
"1439
[; <" TRISC equ 087h ;# ">
"1501
[; <" TRISD equ 088h ;# ">
"1563
[; <" TRISE equ 089h ;# ">
"1620
[; <" PIE1 equ 08Ch ;# ">
"1682
[; <" PIE2 equ 08Dh ;# ">
"1722
[; <" PCON equ 08Eh ;# ">
"1756
[; <" SSPCON2 equ 091h ;# ">
"1818
[; <" PR2 equ 092h ;# ">
"1825
[; <" SSPADD equ 093h ;# ">
"1832
[; <" SSPSTAT equ 094h ;# ">
"2001
[; <" TXSTA equ 098h ;# ">
"2082
[; <" SPBRG equ 099h ;# ">
"2089
[; <" CMCON equ 09Ch ;# ">
"2159
[; <" CVRCON equ 09Dh ;# ">
"2224
[; <" ADRESL equ 09Eh ;# ">
"2231
[; <" ADCON1 equ 09Fh ;# ">
"2290
[; <" EEDATA equ 010Ch ;# ">
"2297
[; <" EEADR equ 010Dh ;# ">
"2304
[; <" EEDATH equ 010Eh ;# ">
"2311
[; <" EEADRH equ 010Fh ;# ">
"2318
[; <" EECON1 equ 018Ch ;# ">
"2363
[; <" EECON2 equ 018Dh ;# ">
"3 ECU/LED/ecu_led.c
[; ;ECU/LED/ecu_led.c: 3: std_ReturnType led_intialize(const led_t *led)
[v _led_intialize `(uc ~T0 @X0 1 ef1`*CS103 ]
"4
[; ;ECU/LED/ecu_led.c: 4: {
{
[e :U _led_intialize ]
"3
[; ;ECU/LED/ecu_led.c: 3: std_ReturnType led_intialize(const led_t *led)
[v _led `*CS103 ~T0 @X0 1 r1 ]
"4
[; ;ECU/LED/ecu_led.c: 4: {
[f ]
"5
[; ;ECU/LED/ecu_led.c: 5:     std_ReturnType ret = (std_ReturnType)0x00;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"6
[; ;ECU/LED/ecu_led.c: 6:     if(((void*)0) == led)
[e $ ! == -> -> -> 0 `i `*v `*CS103 _led 105  ]
"7
[; ;ECU/LED/ecu_led.c: 7:     {
{
"8
[; ;ECU/LED/ecu_led.c: 8:         ret = (std_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"9
[; ;ECU/LED/ecu_led.c: 9:     }
}
[e $U 106  ]
"10
[; ;ECU/LED/ecu_led.c: 10:     else
[e :U 105 ]
"11
[; ;ECU/LED/ecu_led.c: 11:     {
{
[v F1578 `S102 ~T0 @X0 1 s ]
[i F1578
:U ..
:U ..
"12
[; ;ECU/LED/ecu_led.c: 12:         pin_config_t pin_obj = { .port = led->port, .pin = led->pin, .direction = GPIO_OUTPUT,
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
..
..
]
[v _pin_obj `S102 ~T0 @X0 1 a ]
[e = _pin_obj F1578 ]
[e ; = . _pin_obj 0 . *U _led 0 ; = . _pin_obj 1 . *U _led 1 ; = . _pin_obj 2 -> . `E1505 0 `uc = . _pin_obj 3 . *U _led 2 ]
"14
[; ;ECU/LED/ecu_led.c: 14:         ret = (std_ReturnType)0x01;
[e = _ret -> -> 1 `i `uc ]
"15
[; ;ECU/LED/ecu_led.c: 15:         ret &= gpio_pin_initialize(&pin_obj);
[e =& _ret -> ( _gpio_pin_initialize (1 -> &U _pin_obj `*CS102 `uc ]
"16
[; ;ECU/LED/ecu_led.c: 16:     }
}
[e :U 106 ]
"17
[; ;ECU/LED/ecu_led.c: 17:     return ret;
[e ) _ret ]
[e $UE 104  ]
"18
[; ;ECU/LED/ecu_led.c: 18: }
[e :UE 104 ]
}
"19
[; ;ECU/LED/ecu_led.c: 19: std_ReturnType led_turn_off(const led_t *led)
[v _led_turn_off `(uc ~T0 @X0 1 ef1`*CS103 ]
"20
[; ;ECU/LED/ecu_led.c: 20: {
{
[e :U _led_turn_off ]
"19
[; ;ECU/LED/ecu_led.c: 19: std_ReturnType led_turn_off(const led_t *led)
[v _led `*CS103 ~T0 @X0 1 r1 ]
"20
[; ;ECU/LED/ecu_led.c: 20: {
[f ]
"21
[; ;ECU/LED/ecu_led.c: 21:     std_ReturnType ret = (std_ReturnType)0x00;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"22
[; ;ECU/LED/ecu_led.c: 22:     if(((void*)0) == led)
[e $ ! == -> -> -> 0 `i `*v `*CS103 _led 108  ]
"23
[; ;ECU/LED/ecu_led.c: 23:     {
{
"24
[; ;ECU/LED/ecu_led.c: 24:         ret = (std_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"25
[; ;ECU/LED/ecu_led.c: 25:     }
}
[e $U 109  ]
"26
[; ;ECU/LED/ecu_led.c: 26:     else
[e :U 108 ]
"27
[; ;ECU/LED/ecu_led.c: 27:     {
{
[v F1583 `S102 ~T0 @X0 1 s ]
[i F1583
:U ..
:U ..
"28
[; ;ECU/LED/ecu_led.c: 28:         pin_config_t pin_obj = { .port = led->port, .pin = led->pin, .direction = GPIO_OUTPUT,
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
..
..
]
[v _pin_obj `S102 ~T0 @X0 1 a ]
[e = _pin_obj F1583 ]
[e ; = . _pin_obj 0 . *U _led 0 ; = . _pin_obj 1 . *U _led 1 ; = . _pin_obj 2 -> . `E1505 0 `uc = . _pin_obj 3 . *U _led 2 ]
"30
[; ;ECU/LED/ecu_led.c: 30:         ret = (std_ReturnType)0x01;
[e = _ret -> -> 1 `i `uc ]
"31
[; ;ECU/LED/ecu_led.c: 31:         ret &= gpio_pin_write_logic(&pin_obj, GPIO_LOW);
[e =& _ret -> ( _gpio_pin_write_logic (2 , -> &U _pin_obj `*CS102 . `E1501 0 `uc ]
"32
[; ;ECU/LED/ecu_led.c: 32:     }
}
[e :U 109 ]
"33
[; ;ECU/LED/ecu_led.c: 33:     return ret;
[e ) _ret ]
[e $UE 107  ]
"34
[; ;ECU/LED/ecu_led.c: 34: }
[e :UE 107 ]
}
"35
[; ;ECU/LED/ecu_led.c: 35: std_ReturnType led_turn_on(const led_t *led)
[v _led_turn_on `(uc ~T0 @X0 1 ef1`*CS103 ]
"36
[; ;ECU/LED/ecu_led.c: 36: {
{
[e :U _led_turn_on ]
"35
[; ;ECU/LED/ecu_led.c: 35: std_ReturnType led_turn_on(const led_t *led)
[v _led `*CS103 ~T0 @X0 1 r1 ]
"36
[; ;ECU/LED/ecu_led.c: 36: {
[f ]
"37
[; ;ECU/LED/ecu_led.c: 37:     std_ReturnType ret = (std_ReturnType)0x00;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"38
[; ;ECU/LED/ecu_led.c: 38:     if(((void*)0) == led)
[e $ ! == -> -> -> 0 `i `*v `*CS103 _led 111  ]
"39
[; ;ECU/LED/ecu_led.c: 39:     {
{
"40
[; ;ECU/LED/ecu_led.c: 40:         ret = (std_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"41
[; ;ECU/LED/ecu_led.c: 41:     }
}
[e $U 112  ]
"42
[; ;ECU/LED/ecu_led.c: 42:     else
[e :U 111 ]
"43
[; ;ECU/LED/ecu_led.c: 43:     {
{
[v F1588 `S102 ~T0 @X0 1 s ]
[i F1588
:U ..
:U ..
"44
[; ;ECU/LED/ecu_led.c: 44:         pin_config_t pin_obj = { .port = led->port, .pin = led->pin, .direction = GPIO_OUTPUT,
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
..
..
]
[v _pin_obj `S102 ~T0 @X0 1 a ]
[e = _pin_obj F1588 ]
[e ; = . _pin_obj 0 . *U _led 0 ; = . _pin_obj 1 . *U _led 1 ; = . _pin_obj 2 -> . `E1505 0 `uc = . _pin_obj 3 . *U _led 2 ]
"46
[; ;ECU/LED/ecu_led.c: 46:         ret = (std_ReturnType)0x01;
[e = _ret -> -> 1 `i `uc ]
"47
[; ;ECU/LED/ecu_led.c: 47:         ret &= gpio_pin_write_logic(&pin_obj, GPIO_HIGH);
[e =& _ret -> ( _gpio_pin_write_logic (2 , -> &U _pin_obj `*CS102 . `E1501 1 `uc ]
"48
[; ;ECU/LED/ecu_led.c: 48:     }
}
[e :U 112 ]
"49
[; ;ECU/LED/ecu_led.c: 49:     return ret;
[e ) _ret ]
[e $UE 110  ]
"50
[; ;ECU/LED/ecu_led.c: 50: }
[e :UE 110 ]
}
"51
[; ;ECU/LED/ecu_led.c: 51: std_ReturnType led_turn_toggle(const led_t *led)
[v _led_turn_toggle `(uc ~T0 @X0 1 ef1`*CS103 ]
"52
[; ;ECU/LED/ecu_led.c: 52: {
{
[e :U _led_turn_toggle ]
"51
[; ;ECU/LED/ecu_led.c: 51: std_ReturnType led_turn_toggle(const led_t *led)
[v _led `*CS103 ~T0 @X0 1 r1 ]
"52
[; ;ECU/LED/ecu_led.c: 52: {
[f ]
"53
[; ;ECU/LED/ecu_led.c: 53:     std_ReturnType ret = (std_ReturnType)0x00;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"54
[; ;ECU/LED/ecu_led.c: 54:     if(((void*)0) == led)
[e $ ! == -> -> -> 0 `i `*v `*CS103 _led 114  ]
"55
[; ;ECU/LED/ecu_led.c: 55:     {
{
"56
[; ;ECU/LED/ecu_led.c: 56:         ret = (std_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"57
[; ;ECU/LED/ecu_led.c: 57:     }
}
[e $U 115  ]
"58
[; ;ECU/LED/ecu_led.c: 58:     else
[e :U 114 ]
"59
[; ;ECU/LED/ecu_led.c: 59:     {
{
[v F1593 `S102 ~T0 @X0 1 s ]
[i F1593
:U ..
:U ..
"60
[; ;ECU/LED/ecu_led.c: 60:        pin_config_t pin_obj = { .port = led->port, .pin = led->pin, .direction = GPIO_OUTPUT,
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
..
..
]
[v _pin_obj `S102 ~T0 @X0 1 a ]
[e = _pin_obj F1593 ]
[e ; = . _pin_obj 0 . *U _led 0 ; = . _pin_obj 1 . *U _led 1 ; = . _pin_obj 2 -> . `E1505 0 `uc = . _pin_obj 3 . *U _led 2 ]
"62
[; ;ECU/LED/ecu_led.c: 62:         ret = (std_ReturnType)0x01;
[e = _ret -> -> 1 `i `uc ]
"63
[; ;ECU/LED/ecu_led.c: 63:         ret &= gpio_pin_toggle_logic(&pin_obj);
[e =& _ret -> ( _gpio_pin_toggle_logic (1 -> &U _pin_obj `*CS102 `uc ]
"64
[; ;ECU/LED/ecu_led.c: 64:     }
}
[e :U 115 ]
"65
[; ;ECU/LED/ecu_led.c: 65:     return ret;
[e ) _ret ]
[e $UE 113  ]
"66
[; ;ECU/LED/ecu_led.c: 66: }
[e :UE 113 ]
}
